# Задача: Напишите программу для проверки истинности утверждения 
# ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.

# ИСПОЛЬЗОВАНИЕ МЕТОДА LIST COMPREHENSION ДЛЯ ФОРМИРОВАНИЯ СПИСКОВ

# Дизъюнкция: ¬(X ⋁ Y ⋁ Z)
f1 = [not(x or y or z) for x in range(2) for y in range(2) for z in range(2)]

# Конъюнкция: ¬X ⋀ ¬Y ⋀ ¬Z
f2 = [not(x) and (not y) and (not z) for x in range(2) for y in range(2) for z in range(2)]                                      

# Сравнение результатов дизъюнкции и конъюнкции.  
if f1 == f2:                               
    print(' \nУтверждение: ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z является истинным.\n')
else:
    print('\nУтверждение ложно.\n') 


# РЕШЕНИЕ ЗАДАЧИ БЕЗ ИСПОЛЬЗОВАНИЯ МЕТОДОВ УСКОРЕННОЙ ОБРАБОТКИ ДАННЫХ

# print("\n")  
# # Операция дизъюнкции. 
# print("Дизъюнкция: высказывание ложно, если оба значения ложны.")
# # for x in range(2):          # Используем оператор цикла for для составления таблицы 
# #     for y in range(2):      # истинности. 
# #         for z in range(2):  # range(2) - генерирует числа 0 и 1.
# #             f1 = not(x or y or z)            
# #             print(f' {x} {y} {z} = {f1}')    # Вывод на печать таблицы истинности 
# #                                              # и результата вычисления дизъюнкции.

# # Операция конъюнкции.    
# print("Конъюнкция: высказывание истинно, если оба значения истинны.")
# # for x in range(2):
# #     for y in range(2):                       # Вывод на печать таблицы истинности 
# #         for z in range(2):                   # и результата вычисления конъюнкции.                
# #             f2 = (not x) and (not y) and (not z)
# #             print(f' {x} {y} {z} = {f2}')    

# Сравнение дизъюнкции и конъюнкции, печать результата.
# if f1 == f2:                               
#     print(' \nУтверждение: ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z является истинным.\n')
# else:
#     print('\nУтверждение ложно.\n') 
