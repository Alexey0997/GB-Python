# Задача № 2.	Задайте список из n чисел последовательности (1 + 1/n)^n, 
# выведеите его на экран, а так же сумму элементов списка.
# Пример:
# Для n=4 -> [2, 2.25, 2.37, 2.44]
# Сумма 9.06

# ИСПОЛЬЗОВАНИЕ МЕТОДА УСКОРЕННОЙ ОБРАБОТКИ ДАННЫХ "MAP"

n = int(input('\nВведите число N для рассчета последовательности: '))
my_list = [i for i in range (1, n + 1)]   # Сформируем список чисел от 1 до N.
def sequence(x):                          # Используем функцию для вычисления
    return round(float(1 + 1 / x)**x, 2)  # элементов списка по заданной формуле.             
                                          # Результат округлим до сотых.
my_list = list(map(sequence, my_list))    # Используем функция map для формирования 
                                          # списка. 
sum = 0                                   
for item in my_list:                      # Посчитаем сумму элементов списка. 
    sum += item
print(f'Числовая последовательность для N = {n} имеет вид: {my_list}\n\
Сумма элементов последовательности Sum = {sum}\n')

# РЕШЕНИЕ ЗАДАЧИ БЕЗ ИСПОЛЬЗОВАНИЯ МЕТОДОВ УСКОРЕННОЙ ОБРАБОТКИ ДАННЫХ
# print("\n"*2)
# n = int(input('Введите целое положительное число: '))
# my_list = []
# for i in range(1, n+1):                     # Цикл от 1 до n+1.
#     result = round(float((1 + 1/i)**i), 2)  # Рассчет результата по формуле, 
#     if float(result) == int(float(result)): # с округлением до сотых.
#         my_list.append(int(result))         # Если число целое, то запись целого числа.  
#     else:
#         my_list.append(float(result))       # Если есть плавающая точка, то запись 
#                                             # в список вещественного числа.
# print(f'Для цифры {n} поледовательность имеет следующий вид: {my_list}')

# sum = 0                                     # Рассчет суммы цифр числовой последовательности.
# for i in str(my_list):                       
#     if i.isdigit():                         # Если это цифра, то добавляем ее к сумме.
#         sum += float(i)
# print(f'Сумма цифр последовательности = {sum}.')